---
title: "Actividad Final"
subtitle: "Ejercicio de analisis de amenidades del Carchi"
author: "Jonathan Narváez"
date: "Agosto 2024"
format: docx
editor: visual
---

# Parte 1: Indentificación y reflexión sobre las Amenidades de Salud

vamos a realizar la busquedad de hospitales y clinicas de la provincia del carchi usando OpenStreet

```{r}
#Vamos a importar las librer
library(osmdata)
library(sf)
library(tidyverse)
library(readxl)
library(spdep)
library(lattice)

```


```{r}

#Creamos una lista con los lobres de cada una de las parroquias del carchi


lista_parroquias = c("Tulcán", "El Carmelo", "Julio Andrade", 
                     "Maldonado", "Pioter", "Tobar Donoso",
                     "Tufiño", "Urbina", "El Chical", 
                     "Santa Martha de Cuba", "Bolívar", "Garcia Moreno",
                     "Los Andes", "Monte Olivo", "San Vicente de Pusir",
                     "San Rafael", "El Ángel", "El Goaltal",
                     "La Libertad", "San Isidro", "Mira",
                     "Concepción", "Jijón y Caamaño", "Juan Montalvo")

#lista de amenidades
localizaciones = c("hospital", "clinic")

#Función para obtener los puntos dado una lista de parrquias
obtener_puntos <- function(zonas, provincia, pais, localizaciones) {
  
  # Inicializar lista_puntos como un data frame vacío
  lista_puntos <- data.frame(
    osm_id = character(),
    geometry = st_sfc(),  # Inicializar como un objeto sfc vacío
    stringsAsFactors = FALSE
  )
  
  for (zona in zonas) {
    # Obtener el bounding box para cada zona
    bbox <- getbb(paste(zona, provincia, pais, sep = ", "))
    
    # Construir la consulta y obtener los puntos
    query <- opq(bbox) %>% 
      add_osm_feature(key = "amenity", value = localizaciones) %>% 
      osmdata_sf()
    
    # Verificar si hay puntos disponibles antes de agregar
    if (!is.null(query$osm_points) && nrow(query$osm_points) > 0) {
      # Crear un nuevo data.frame con los resultados de la zona
      zona_puntos <- data.frame(
        osm_id = query$osm_points$osm_id,
        stringsAsFactors = FALSE
      )
      
      # Asignar la geometría
      zona_puntos$geometry <- query$osm_points$geometry
      
      # Combinar con el data.frame principal
      lista_puntos <- rbind(lista_puntos, zona_puntos)
     
    }
  }
  
  # Convertir el data.frame en un objeto sf para manejar geometría correctamente
  lista_puntos <- st_as_sf(lista_puntos, sf_column_name = "geometry", crs = 4326)
  
  return(lista_puntos)
}
#obtener_puntos(lista_parroquias,"Carchi", "Ecuador", localizaciones)
puntos <- obtener_puntos(lista_parroquias,"Carchi", "Ecuador", localizaciones = localizaciones)

#Numero de amenidades de hospitales de la provincia del ecuador
nrow(puntos)

```

Decidí realizar un estudio primero de la parroquia de El Ángel para analizar la cantidad de amenidades, pero al ser una parroquia pequeña, me di cuenta de que no obtenía suficientes datos. Por ello, opté por buscar los puntos de cada parroquia de la provincia de Carchi. Para esto, inicialmente solicité a OpenStreetMap las amenidades de la provincia, pero debido al uso de un bbox (cuadro delimitador), obtuve resultados de amenidades fuera de la provincia.

Decidí entonces crear una función para consultar por parroquias, pero encontré un problema: al buscar las amenidades por parroquia, detecté que algunas de ellas también existen en otras provincias de Ecuador. Finalmente, encontré 248 hospitales y clínicas en la provincia de Carchi. No es necesario realizar la búsqueda por cada parroquia, pero podría ser útil para un análisis por zonas territoriales en Ecuador.

# Parte 2: Unión de los polígonos de Zonas Censales a Nivel de Parroquias

Obtenemos la zona geometria de la provincia del carchi

```{r}
# Lista las capas disponibles dentro del archivo GeoDatabase para identificar la que necesitamos.
st_layers("../data/GEODATABASE_NACIONAL_2021/GEODATABASE_NACIONAL_2021.gdb")

# Lee la capa "zon_a" desde el archivo GeoDatabase y la guarda en el objeto 'zonas'.
zonas <- st_read("../data/GEODATABASE_NACIONAL_2021/GEODATABASE_NACIONAL_2021.gdb",
                 layer = "zon_a")

# Filtra las zonas para mantener solo aquellas cuyo código comienza con "04".
zonas <- zonas %>% 
  filter(str_detect(zon, "^04"))
```

Para graficar empleamos el código del gráfico **ggplot2** y jugamos con las opciones de Quarto chunks

```{r, echo = FALSE, fig.height= 6, fgi.dpi = 300}
ggplot() +
  geom_sf(data = zonas) +
  geom_sf(data = puntos) +
  labs(
    titulo = "Figura 1. Distribución de hospitales en la provincia de Carchi",
    subtitle = "Fuente: OpenStreetMaps"
  ) + 
  theme_minimal()

```

Vamos a leer el archivo con la población del Ecuador por parroquias

```{r}
# Lista las hojas disponibles en el archivo Excel para identificar la que necesitamos.
excel_sheets("../data/01_2022_CPV_Estructura_poblacional.xlsx")

# Lee la hoja "1.2" del archivo Excel, en el rango específico de celdas B10:G1299, 
# y guarda los datos en el objeto 'poblacion'.
poblacion <- read_excel("../data/01_2022_CPV_Estructura_poblacional.xlsx", 
                        sheet = "1.2",
                        range = "B10:G1299"
                        )

# Renombra las columnas del dataframe para hacerlas más descriptivas.
names(poblacion) <- c("provincia", "canton", "parroquia", "total_nacional", "hombres", "mujeres")

```

Limpiamos los resultados del censo:

```{r}
# Filtra el dataframe para eliminar filas con valores NA en la columna 'provincia'
# y excluye filas donde la columna 'parroquia' contiene las palabras "Total" o "Nacional".
poblacion <- poblacion %>% 
  filter(!is.na(provincia), 
         str_detect(parroquia, "^Total|Nacional", negate = TRUE)) 

# Convierte los valores de las columnas 'provincia', 'canton', y 'parroquia' a mayúsculas para mantener uniformidad.
poblacion <- poblacion %>% 
  mutate(across(c(provincia, canton, parroquia), str_to_upper))

```

Ahora leemos la codificación DPA del INEC

```{r}
# Lee la hoja "CODIGOS" del archivo Excel que contiene la codificación DPA.
dpa <- read_excel("../data/CODIFICACIÓN_2022.xlsx", sheet = "CODIGOS")
```

Vamos a acordamos de las funciones join:

```{r}
# Realiza una unión izquierda (left join) entre la tabla de población y la tabla de codificación DPA.
poblacion <- poblacion %>% 
  left_join(dpa, by = c("provincia" = "DPA_DESPRO",   
                        "canton" = "DPA_DESCAN",     
                        "parroquia" = "DPA_DESPAR"   
                        ))
```

# Parte 3: Cálculo del Número de Amenidades

Nos queda unir los poligonos a nivel de parroquia por que estan a nivel de zona censal

```{r}
# Crea una nueva columna 'DPA_PARROQ' en el dataframe 'zonas' extrayendo los primeros 6 caracteres de la columna 'zon'.
zonas <- zonas %>% 
  mutate(DPA_PARROQ = str_sub(zon, 1, 6)) 

# Agrupa las geometrías por el código 'DPA_PARROQ' y realiza una unión espacial de las formas para consolidar los polígonos.
parroquias <- zonas %>% 
  group_by(DPA_PARROQ) %>%
  summarise(Shape = st_union(Shape)) 

```

Unimos los datos de poblacion:

```{r}
parroquias <- parroquias %>% 
  left_join(poblacion)
```

Mapas de calor

```{r, echo = FALSE, fig.height= 6, fgi.dpi = 300}
parroquias %>% 
  ggplot() +
  geom_sf(aes(fill = log(total_nacional))) +
  geom_sf(data = puntos) + 
  scale_fill_gradient(low = "#FFC30D", high = "#900C3F") +
  labs("Figura 2. Densidad Poblacional de la provincia de Imbabura",
       caption = "Fuente: INEC")
```

En el mapa de calor, se observa que la mayor concentración de hospitales se encuentra en la ciudad de Tulcán, que es la capital de la provincia de Carchi. Esto es esperado, ya que las capitales provinciales suelen contar con una mayor infraestructura de salud. Además, se destaca la presencia significativa de hospitales en el cantón de Montúfar, que es la segunda parroquia más grande en términos de población del cantón. Esto puede indicar una distribución de servicios de salud que responde a la densidad poblacional y a la importancia relativa de estas localidades dentro de la provincia. \# Parte 4: Cálculo del Ratio de Amenidades por habitante

Vamos al indicador de amenidades por cada 100 habitantes:

```{r}

puntos <- st_transform(x = puntos, crs = st_crs(parroquias))

parroquias_puntos <- st_join(x = puntos, y = parroquias, join = st_within)

parroquias_puntos <-  parroquias_puntos %>% 
  count(DPA_PARROQ, name = "hospitales") %>% 
  as_tibble()

parroquias <- parroquias %>% 
  left_join(parroquias_puntos)

parroquias <- parroquias %>% 
  mutate(hospitales = replace_na(hospitales, 0))
```

Calculamos el indicador

```{r, echo = FALSE, fig.height= 6, fgi.dpi = 300}
parroquias <- parroquias %>% 
  mutate(indicador = (hospitales/total_nacional) * 100)

parroquias %>% 
  ggplot() +
  geom_sf(aes(fill = indicador)) +
  geom_sf(data = puntos) +
  scale_fill_gradient(low = "#FFC30D", high = "#900C3F") +
  labs(title = "Figura 3. indicador de amenidades de salud por cada 100 habitantes",
       caption = "Fuente: INEC")
```

En la provincia de Carchi, se puede observar que el cantón de Tulcán concentra la mayor cantidad de amenidades de salud. Esto refleja una tendencia común en la cual los centros de salud se localizan en las cabeceras cantonales debido a su importancia administrativa y su mayor densidad poblacional. La concentración de estas amenidades en Tulcán resalta su rol como el principal centro de servicios de salud en la provincia, lo que probablemente se debe a su estatus como capital provincial y a su mayor infraestructura en comparación con otros cantones.

#Parte 5: Cálculo del indice de Moran para el indicador de Amenidades de salud

```{r}
vecinos <- poly2nb(parroquias, queen = TRUE)

vecinos_pesos <- nb2listw(vecinos, style = "W")

matriz <- listw2mat(vecinos_pesos)
ncol(matriz)
nrow(matriz)
```

visualizamos la matriz de vecindad

```{r}
levelplot(t(matriz[1:32, 1:32]), 
          scales = list(y = list(at = seq(10, 50, by = 10), 
                                 labels = seq(10, 50, by = 10))), 
          main = "Matriz de Pesos Espaciales Basada en Contigüidad")

```

Calculo del indice de moran

```{r}
moran <- moran.test(parroquias$hospitales, listw = vecinos_pesos) 
moran


```

Calculo de indice local de moran

```{r}
local_moran <- localmoran(parroquias$hospitales, listw = vecinos_pesos)
```

```{r}
head(local_moran)
```

Integramos los resultados del indice de Moran Local y los atributos de objetos resultantes

```{r}
clusters <- attributes(local_moran)$quadr

parroquias_zonas <- bind_cols(parroquias, clusters)

local_moran <- local_moran %>% 
  as_tibble() 

parroquias_zonas <- parroquias_zonas %>% 
  bind_cols(local_moran)

plot_1 <- parroquias %>% 
  ggplot() + 
  geom_sf(aes(fill = hospitales)) + 
  scale_fill_viridis_c(option = "A") 
plot_1
```

Dado que el valor p es menor que 0.05, rechazamos la hipótesis nula de ausencia de autocorrelación espacial. Esto nos permite concluir que existe una autocorrelación espacial significativa en el promedio del número de hospitales por cada 100 habitantes. En otras palabras, la distribución espacial de los hospitales no es aleatoria; los valores tienden a agruparse de manera que algunas áreas presentan una concentración mayor o menor de hospitales en función de su proximidad geográfica.
